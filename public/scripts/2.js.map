{"version":3,"sources":["webpack:///./src/redux/selectors/common.js","webpack:///./src/redux/actions/feed.js","webpack:///./src/components/LoadingIcon.jsx","webpack:///./src/components/FeedPage/Post.jsx","webpack:///./src/components/FeedPage/PostForm.jsx","webpack:///./src/components/FeedPage/Comment.jsx","webpack:///./src/redux/actions/comments.js","webpack:///./src/components/FeedPage/CommentForm.jsx","webpack:///./src/components/FeedPage/Comments.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["getErrors","errors","data","reduce","prev","curr","_objectSpread","_defineProperty","param","msg","setPost","post","type","setEditing","editing","setPage","page","dispatch","getPosts","getPost","postId","undefined","fetch","then","res","json","catch","err","setErrors","getState","feed","posts","totalItems","itemsPerPage","addPost","body","JSON","stringify","method","headers","Content-Type","Authorization","user","token","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","next","sent","status","stop","this","_x","apply","arguments","updatePost","_ref2","_callee2","_context2","_x2","deletePost","_ref3","_callee3","_context3","_x3","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","LoadingIcon","className","a","createElement","src","propTypes","PropTypes","string","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_markdown__WEBPACK_IMPORTED_MODULE_2__","react_markdown__WEBPACK_IMPORTED_MODULE_2___default","_redux_actions_feed__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","Post","editable","history","fromFeed","onClick","_id","push","title","source","content","substring","length","creator","name","updatedAt","comments","object","func","bool","mapDispatchToProps","connect","withRouter","PostForm","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","args","Array","_key","_getPrototypeOf","call","concat","_assertThisInitialized","props","e","setState","target","value","preventDefault","state","_inherits","React","Component","key","_this$state","onChange","placeholder","onSumbit","isRequired","common","Comment","_Component","_possibleConstructorReturn","_this$props","_this$props$comment","comment","_this$props$comment$c","flag","react_default","react_markdown_default","ownsComment","CommentForm","CommentForm_classCallCheck","CommentForm_getPrototypeOf","CommentForm_defineProperty","CommentForm_assertThisInitialized","addComment","updateComment","deleteComment","CommentForm_inherits","commentId","Comments","userId","map","index","react","FeedPage_CommentForm","FeedPage_Comment","array","PostPage","PostPage_classCallCheck","PostPage_possibleConstructorReturn","PostPage_getPrototypeOf","PostPage_inherits","showForm","FeedPage_Comments","match","params"],"mappings":"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","file":"./scripts/2.js","sourcesContent":["export const getErrors = errors =>\r\n    errors &&\r\n    errors.data &&\r\n    errors.data.reduce(\r\n        (prev, curr) => ({ ...prev, [curr.param]: curr.msg }),\r\n        {}\r\n    );\r\n","import { setErrors } from './common';\r\n\r\nexport const setPost = post => ({\r\n    type: 'SET_POST',\r\n    post\r\n});\r\n\r\nexport const setEditing = editing => ({\r\n    type: 'SET_EDITING',\r\n    editing\r\n});\r\n\r\nexport const setPage = page => dispatch => {\r\n    dispatch({\r\n        type: 'SET_POSTS_PAGE',\r\n        page\r\n    });\r\n    dispatch(getPosts());\r\n};\r\n\r\nexport const getPost = postId => dispatch => {\r\n    dispatch(setPost(undefined));\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId)\r\n        .then(res => res.json())\r\n        .then(json => dispatch(setPost(json.post)))\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const getPosts = () => (dispatch, getState) => {\r\n    fetch('https://wiakc.herokuapp.com/feed/posts?page=' + getState().feed.page)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type: 'GET_POSTS',\r\n                posts: json.posts,\r\n                totalItems: json.totalItems,\r\n                itemsPerPage: json.itemsPerPage\r\n            });\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const addPost = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updatePost = (postId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deletePost = postId => (dispatch, getState) =>\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: getState().user.token\r\n        }\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadingIcon = ({ className }) => {\r\n    return (\r\n        <div className={className || 'loading-icon'}>\r\n            <img src=\"https://i.gifer.com/ZNeS.gif\" className=\"loading-icon\" />\r\n            <h4 className=\"centered\">Loading!</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingIcon.propTypes = {\r\n    className: PropTypes.string\r\n};\r\n\r\nexport default LoadingIcon;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Post = ({ post, setEditing, editable, history, fromFeed }) => {\r\n    return (\r\n        <div\r\n            className={'post ' + (fromFeed ? 'post__feed' : '')}\r\n            onClick={() =>\r\n                (editable && setEditing(post._id)) ||\r\n                history.push('/feed/' + post._id)\r\n            }\r\n        >\r\n            <h1 className=\"post__title\">{post.title}</h1>\r\n            <ReactMarkdown\r\n                className=\"post__content\"\r\n                source={\r\n                    fromFeed\r\n                        ? post.content.substring(0, 500) +\r\n                          ((post.content.length > 500 && '...') || '')\r\n                        : post.content\r\n                }\r\n            />\r\n            <h2 className=\"post__author\">{post.creator.name}</h2>\r\n            <h6 className=\"post__date\">{post.updatedAt}</h6>\r\n            <h6 className=\"post__comments\">\r\n                {post.comments.length} Comment\r\n                {post.comments.length === 1 ? '' : 's'}\r\n            </h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object,\r\n    setEditing: PropTypes.func,\r\n    editable: PropTypes.bool,\r\n    history: PropTypes.object,\r\n    fromFeed: PropTypes.bool\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(withRouter(Post));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addPost, updatePost, deletePost } from '../../redux/actions/feed';\r\nimport { getErrors } from '../../redux/selectors/common';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport class PostForm extends React.Component {\r\n    state = {\r\n        title: (this.props.post && this.props.post.title) || '',\r\n        content: (this.props.post && this.props.post.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addPost(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updatePost(this.props.post._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deletePost(this.props.post._id);\r\n                this.props.history.push('/feed');\r\n                break;\r\n        }\r\n\r\n        if (!this.props.post) {\r\n            this.setState({ title: '', content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content, title } = this.state;\r\n\r\n        return (\r\n            <div className=\"post-form__container\">\r\n                <div className=\"post-form\">\r\n                    <input\r\n                        className=\"post-form__title\"\r\n                        value={title}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"New Post Title\"\r\n                        name=\"title\"\r\n                    />\r\n                    {errors && errors.title && (\r\n                        <p className=\"post-form__invalid\">{errors.title}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"post-form\">\r\n                    <textarea\r\n                        className=\"post-form__content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Share a recipe, experience, or anything else!\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"post-form__invalid\">{errors.content}</p>\r\n                    )}\r\n                </div>\r\n                {(this.props.post && (\r\n                    <div className=\"post-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Post\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Post\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"post-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Post\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n    updatePost,\r\n    deletePost\r\n};\r\n\r\nPostForm.propTypes = {\r\n    post: PropTypes.object,\r\n    addPost: PropTypes.func.isRequired,\r\n    updatePost: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostForm));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport class Comment extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        ownsComment: PropTypes.bool,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            comment: {\r\n                _id,\r\n                content,\r\n                creator: { name, flag }\r\n            },\r\n            setEditing\r\n        } = this.props;\r\n        return (\r\n            <div className=\"comment\" onClick={() => setEditing(_id)}>\r\n                <div className=\"comment__user\">\r\n                    <img className=\"comment__user--flag\" src={flag} />\r\n                    <p className=\"comment__user--author\">{name}</p>\r\n                </div>\r\n                <ReactMarkdown className=\"comment__content\" source={content} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Comment);\r\n","import { setErrors } from './common';\r\nimport { setEditing } from './feed';\r\n\r\nexport const addComment = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updateComment = (commentId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deleteComment = commentId => (dispatch, getState) =>\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: getState().user.token\r\n            }\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n} from '../../redux/actions/comments.js';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class CommentForm extends React.Component {\r\n    state = {\r\n        content: (this.props.comment && this.props.comment.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addComment(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updateComment(this.props.comment._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deleteComment(this.props.comment._id);\r\n                break;\r\n        }\r\n\r\n        if (!this.props.comment) {\r\n            this.setState({ content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment-form\">\r\n                <div className=\"comment-form__input\">\r\n                    <textarea\r\n                        className=\"comment-form__input--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"What do you think?\"\r\n                        name=\"content\"\r\n                    />\r\n                </div>\r\n                {errors && errors.content && (\r\n                    <p className=\"comment-form__invalid\">{errors.content}</p>\r\n                )}\r\n                {(this.props.comment && (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Comment\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Comment\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    comment: PropTypes.object,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateComment: PropTypes.func.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n    errors: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comments extends React.Component {\r\n    render() {\r\n        const { comments, editing, userId } = this.props;\r\n        return (\r\n            <div className=\"comments\">\r\n                {comments.map((comment, index) => (\r\n                    <Fragment key={index}>\r\n                        {(userId === comment.creator._id &&\r\n                            editing === comment._id && (\r\n                                <CommentForm comment={comment} />\r\n                            )) || <Comment comment={comment} />}\r\n                    </Fragment>\r\n                ))}\r\n                {userId && (\r\n                    <div className=\"comments__new\">\r\n                        <CommentForm />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    editing: PropTypes.string,\r\n    comments: PropTypes.array,\r\n    userId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.feed.post.comments,\r\n    editing: state.feed.editing,\r\n    userId: state.user.userId\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost, setEditing } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\nimport Comments from '../components/FeedPage/Comments';\r\nimport LoadingIcon from '../components/LoadingIcon';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object,\r\n        postId: PropTypes.string,\r\n        showForm: PropTypes.bool,\r\n        editable: PropTypes.bool,\r\n        getPost: PropTypes.func,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.postId);\r\n    }\r\n\r\n    render() {\r\n        const { post, showForm, editable } = this.props;\r\n        return (\r\n            <div className=\"individual-post\" onClick={() => setEditing('')}>\r\n                {(post && (\r\n                    <div className=\"individual-post__container\">\r\n                        {(showForm && editable && <PostForm post={post} />) || (\r\n                            <Post post={post} editable={editable} />\r\n                        )}\r\n                        <Comments />\r\n                    </div>\r\n                )) || <LoadingIcon />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { match }) => ({\r\n    showForm: !!state.feed.post && state.feed.editing === state.feed.post._id,\r\n    editable:\r\n        !!state.feed.post && state.feed.post.creator._id === state.user.userId,\r\n    postId: match.params.postId,\r\n    post: state.feed.post\r\n});\r\n\r\nconst mapDispatchToProps = { getPost, setEditing };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}