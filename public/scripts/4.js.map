{"version":3,"sources":["webpack:///./src/redux/selectors/feed.js","webpack:///./src/components/FeedPage/Comment.jsx","webpack:///./src/redux/actions/comments.js","webpack:///./src/components/FeedPage/CommentForm.jsx","webpack:///./src/components/FeedPage/Comments.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["canEditComment","state","comment","user","userId","creator","_id","isAuth","Comment","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","Component","key","value","_this$props","props","_this$props$comment","content","_this$props$comment$c","name","flag","setEditing","react_default","a","createElement","className","src","onClick","viewBox","d","react_markdown_default","source","PropTypes","object","ownsComment","bool","func","mapDispatchToProps","connect","_ref","CommentForm","_React$Component","_getPrototypeOf2","_this","CommentForm_classCallCheck","_len","length","args","Array","_key","CommentForm_getPrototypeOf","call","concat","CommentForm_defineProperty","CommentForm_assertThisInitialized","e","setState","target","type","preventDefault","addComment","updateComment","deleteComment","CommentForm_inherits","React","errors","lib_default","rows","onChange","placeholder","onSumbit","data","dispatch","getState","body","JSON","stringify","fetch","feed","post","method","headers","Content-Type","Authorization","token","then","_asyncToGenerator","regeneratorRuntime","mark","_callee","res","json","wrap","_context","prev","next","sent","status","setErrors","stop","_x","catch","err","commentId","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","propTypes","isRequired","getErrors","common","Comments","comments","isEditingComment","map","index","react","FeedPage_CommentForm","FeedPage_Comment","array","string","editing","PostPage","PostPage_classCallCheck","PostPage_possibleConstructorReturn","PostPage_getPrototypeOf","PostPage_inherits","getPost","postId","showForm","editable","loading","LoadingIcon","PostForm","Post","FeedPage_Comments","match","params","withRouter"],"mappings":"4MAEaA,EAAiB,SAAAC,GAAK,OAAI,SAAAC,GAAO,OAC1CD,EAAME,KAAKC,SAAWF,EAAQG,QAAQC,KAAOC,YAAON,EAAME,KAAM,4yBCI7D,UAAMK,EAAb,SAAAC,GAAA,SAAAD,IAAA,mGAAAE,CAAAC,KAAAH,GAAAI,EAAAD,KAAAE,EAAAL,GAAAM,MAAAH,KAAAI,sBAAA,yOAAAC,CAAAR,EAA6BS,kBAA7BT,KAAA,EAAAU,IAAA,SAAAC,MAAA,WAQa,IAAAC,EAQDT,KAAKU,MARJC,EAAAF,EAEDlB,QACII,EAHHgB,EAGGhB,IACAiB,EAJHD,EAIGC,QAJHC,EAAAF,EAKGjB,QAAWoB,EALdD,EAKcC,KAAMC,EALpBF,EAKoBE,KAErBC,EAPCP,EAODO,WAEJ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBC,IAAKN,IAC1CE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBN,GAElCG,EAAAC,EAAAC,cAAA,OACIC,UAAU,0BACVE,QAAS,kBAAMN,EAAWrB,IAC1B4B,QAAQ,aAERN,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,QAAMK,EAAE,yLAIpBP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAeE,UAAU,mBAAmBM,OAAQd,qCAjCpEf,EAAA,KAAaA,kBACU,CACfN,QAASoC,IAAUC,OACnBC,YAAaF,IAAUG,KACvBd,WAAYW,IAAUI,KACtB1C,eAAgBsC,IAAUG,mGAkClC,IAIME,EAAqB,CACvBhB,gBAGWiB,cARS,SAAC3C,EAAD4C,GAAA,IAAU3C,EAAV2C,EAAU3C,QAAV,MAAyB,CAC7CF,eAAgBA,EAAeC,EAAfD,CAAsBE,KAStCyC,EAFWC,CAGbpC,uVCtDK,w2BCSA,IAAMsC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,mGAAAC,CAAAvC,KAAAmC,GAAA,QAAAK,EAAApC,UAAAqC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAxC,UAAAwC,GAAA,SAAA5C,QAAAqC,EAAAQ,EAAAV,IAAAW,KAAA3C,MAAAkC,EAAA,CAAArC,MAAA+C,OAAAL,IAAAM,EAAAC,IAAAX,qDAAA,QACY,CACJ1B,QAAU0B,EAAK5B,MAAMnB,SAAW+C,EAAK5B,MAAMnB,QAAQqB,SAAY,KAFvEoC,EAAAC,IAAAX,IAAA,WAKe,SAAAY,GAAC,OAAIZ,EAAKa,SAALH,EAAA,GAAiBE,EAAEE,OAAOtC,KAAOoC,EAAEE,OAAO5C,UAL9DwC,EAAAC,IAAAX,IAAA,WAOe,SAAAe,GAAI,OAAI,SAAAH,GAGf,OAFAA,EAAEI,iBAEMD,GACJ,KAAK,EACDf,EAAK5B,MAAM6C,WAAWjB,EAAKhD,OAC3B,MACJ,KAAK,EACDgD,EAAK5B,MAAM8C,cAAclB,EAAK5B,MAAMnB,QAAQI,IAAK2C,EAAKhD,OACtD,MACJ,KAAK,EACDgD,EAAK5B,MAAM+C,cAAcnB,EAAK5B,MAAMnB,QAAQI,KAI/C2C,EAAK5B,MAAMnB,SACZ+C,EAAKa,SAAS,CAAEvC,QAAS,QAvBrC0B,YAAA,yOAAAoB,CAAAvB,EAAiCwB,IAAMrD,aAAvC6B,KAAA,EAAA5B,IAAA,SAAAC,MAAA,WA2Ba,IAAAC,EACmCT,KAAKU,MAArCkD,EADHnD,EACGmD,OAAQrE,EADXkB,EACWlB,QAASyB,EADpBP,EACoBO,WACjBJ,EAAYZ,KAAKV,MAAjBsB,QAER,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACR7B,GACC0B,EAAAC,EAAAC,cAAA,OACIC,UAAU,4BACVE,QAAS,kBAAMN,EAAW,KAC1BO,QAAQ,aAERN,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,QAAMK,EAAE,uJACRP,EAAAC,EAAAC,cAAA,QAAMK,EAAE,yDAGhBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACI4C,KAAM,EACN1C,UAAU,+BACVZ,MAAOI,EACPmD,SAAU/D,KAAK+D,SACfC,YAAY,qBACZlD,KAAK,aAGZ8C,GAAUA,EAAOhD,SACdK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBwC,EAAOhD,SAE/CrB,GACE0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVE,QAAStB,KAAKiE,SAAS,IAF3B,UAMAhD,EAAAC,EAAAC,cAAA,UACIC,UAAU,kBACVE,QAAStB,KAAKiE,SAAS,IAF3B,YAQJhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACVE,QAAStB,KAAKiE,SAAS,IAF3B,iDA1ExB9B,EAAA,GA2FMH,EAAqB,CACvBuB,WDrGsB,SAAAW,GAAI,OAAI,SAACC,EAAUC,GACzC,IACAlC,EADMmC,EAAOC,KAAKC,UAAUL,GAC5BM,MACI,yCACIJ,IAAWK,KAAKC,KAAK/E,IACrB,YACJ,CACIgF,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChBC,cAAeV,IAAW5E,KAAKuF,OAEnCV,SAGHW,MAbL9C,EAAA+C,EAAAC,mBAAAC,KAaU,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACiBL,EAAIC,OADrB,OACIA,EADJE,EAAAG,KAEiB,MAAfN,EAAIO,QACJzB,EAAS0B,YAAUP,IAHrB,wBAAAE,EAAAM,SAAAV,EAAApF,SAbV,SAAA+F,GAAA,OAAA7D,EAAA/B,MAAAH,KAAAI,cAmBK4F,MAAM,SAAAC,GAAG,OAAI9B,EAAS0B,YAAUI,QCiFrCzC,cD9EyB,SAAC0C,EAAWhC,GAAZ,OAAqB,SAACC,EAAUC,GACzD,IACA+B,EADM9B,EAAOC,KAAKC,UAAUL,GAC5BM,MACI,yCACIJ,IAAWK,KAAKC,KAAK/E,IACrB,aACAuG,EACJ,CACIvB,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,cAAeV,IAAW5E,KAAKuF,OAEnCV,SAGHW,MAdLmB,EAAAlB,EAAAC,mBAAAC,KAcU,SAAAiB,EAAMf,GAAN,IAAAC,EAAA,OAAAJ,mBAAAK,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACiBL,EAAIC,OADrB,OACIA,EADJe,EAAAV,KAEiB,MAAfN,EAAIO,OACJzB,EAAS0B,YAAUP,IAEnBnB,EAASnD,YAAW,KALtB,wBAAAqF,EAAAP,SAAAM,EAAApG,SAdV,SAAAsG,GAAA,OAAAH,EAAAhG,MAAAH,KAAAI,cAsBK4F,MAAM,SAAAC,GAAG,OAAI9B,EAAS0B,YAAUI,QCuDrCxC,cDpDyB,SAAAyC,GAAS,OAAI,SAAC/B,EAAUC,GAAX,OACtCI,MACI,yCACIJ,IAAWK,KAAKC,KAAK/E,IACrB,aACAuG,EACJ,CACIvB,OAAQ,SACRC,QAAS,CACLE,cAAeV,IAAW5E,KAAKuF,SAItCC,MAZLuB,EAAAtB,EAAAC,mBAAAC,KAYU,SAAAqB,EAAMnB,GAAN,IAAAC,EAAA,OAAAJ,mBAAAK,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACiBL,EAAIC,OADrB,OACIA,EADJmB,EAAAd,KAEiB,MAAfN,EAAIO,QACJzB,EAAS0B,YAAUP,IAHrB,wBAAAmB,EAAAX,SAAAU,EAAAxG,SAZV,SAAA0G,GAAA,OAAAH,EAAApG,MAAAH,KAAAI,cAkBK4F,MAAM,SAAAC,GAAG,OAAI9B,EAAS0B,YAAUI,MAlBrC,IAAAM,ICoDAvF,gBAGJmB,EAAYwE,UAAY,CACpBpH,QAASoC,IAAUC,OACnB2B,WAAY5B,IAAUI,KAAK6E,WAC3BpD,cAAe7B,IAAUI,KAAK6E,WAC9BnD,cAAe9B,IAAUI,KAAK6E,WAC9BhD,OAAQjC,IAAUC,OAClBZ,WAAYW,IAAUI,MAGXE,kBApBS,SAAA3C,GAAK,MAAK,CAC9BsE,OAAQiD,YAAUvH,EAAMwH,OAAOlD,UAqB/B5B,EAFWC,CAGbE,8yBCnHI4E,gaAAiBpD,IAAMrD,kDAChB,IAAAG,EAC0CT,KAAKU,MAA5CsG,EADHvG,EACGuG,SAAUC,EADbxG,EACawG,iBAAkBxH,EAD/BgB,EAC+BhB,OACpC,OACIwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV4F,EAASE,IAAI,SAAC3H,EAAS4H,GAAV,OACVlG,EAAAC,EAAAC,cAACiG,EAAA,SAAD,CAAU7G,IAAK4G,GACTF,EAAiB1H,IACf0B,EAAAC,EAAAC,cAACkG,EAAD,CAAa9H,QAASA,KACpB0B,EAAAC,EAAAC,cAACmG,EAAD,CAAS/H,QAASA,OAG/BE,GACGwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACkG,EAAD,6CAQxBN,EAASJ,UAAY,CACjBM,iBAAkBtF,IAAUI,KAC5BiF,SAAUrF,IAAU4F,MACpB9H,OAAQkC,IAAU6F,QAGtB,IAMevF,cANS,SAAA3C,GAAK,MAAK,CAC9B0H,SAAU1H,EAAMmF,KAAKC,KAAKsC,SAC1BvH,OAAQH,EAAME,KAAKC,OACnBwH,kBJjC4B3H,EIiCOA,EJjCE,SAAAC,GAAO,OAC3CD,EAAME,KAAKC,SAAWF,EAAQG,QAAQC,KAAOC,YAAON,EAAME,KAAM,KACjEF,EAAMmF,KAAKgD,UAAYlI,EAAQI,OAFH,IAAAL,GIoCjB2C,CAAyB8E,61BC9BjC,aAAMW,GAAb,SAAA5H,GAAA,SAAA4H,IAAA,mGAAAC,CAAA3H,KAAA0H,GAAAE,EAAA5H,KAAA6H,EAAAH,GAAAvH,MAAAH,KAAAI,sBAAA,0OAAA0H,CAAAJ,EAA8BpH,kBAA9BoH,KAAA,EAAAnH,IAAA,oBAAAC,MAAA,WAYQR,KAAKU,MAAMqH,QAAQ/H,KAAKU,MAAMsH,UAZtC,CAAAzH,IAAA,SAAAC,MAAA,WAea,IAAAC,EACyCT,KAAKU,MAA3CgE,EADHjE,EACGiE,KAAMuD,EADTxH,EACSwH,SAAUC,EADnBzH,EACmByH,SAAUC,EAD7B1H,EAC6B0H,QAClC,OACIlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBE,QAAS,kBAAMN,YAAW,MACrDmH,GAAWlH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,OACTnH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACTsD,GACEzD,EAAAC,EAAAC,cAACiG,EAAA,SAAD,KACMa,GAAYC,GACVjH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAU3D,KAAMA,KACdzD,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CAAM5D,KAAMA,EAAMwD,SAAUA,IAClCjH,EAAAC,EAAAC,cAACoH,EAAD,QAGJ,kDA7B5Bb,EAAA,MAAaA,qBACU,CACfhD,KAAM/C,IAAUC,OAChBoG,OAAQrG,IAAU6F,OAClBS,SAAUtG,IAAUG,KACpBoG,SAAUvG,IAAUG,KACpBiG,QAASpG,IAAUI,KACnBf,WAAYW,IAAUI,KACtBoG,QAASxG,IAAUG,2GA6B3B,IAWME,GAAqB,CAAE+F,YAAS/G,gBAEvBiB,sBAbS,SAAC3C,EAAD4C,GAAA,IAAUsG,EAAVtG,EAAUsG,MAAV,MAAuB,CAC3CP,WAAY3I,EAAMmF,KAAKC,MAAQpF,EAAMmF,KAAKgD,UAAYnI,EAAMmF,KAAKC,KAAK/E,IACtEuI,WACM5I,EAAMmF,KAAKC,OACZpF,EAAMmF,KAAKC,KAAKhF,QAAQC,MAAQL,EAAME,KAAKC,QACxCG,YAAON,EAAME,KAAM,IAC3BwI,OAAQQ,EAAMC,OAAOT,OACrBtD,KAAMpF,EAAMmF,KAAKC,KACjByD,QAAS7I,EAAMwH,OAAOqB,UAOtBnG,GAFWC,CAGbyG,YAAWhB","file":"./scripts/4.js","sourcesContent":["import { isAuth } from '../../redux/selectors/users';\r\n\r\nexport const canEditComment = state => comment =>\r\n    state.user.userId === comment.creator._id || isAuth(state.user, 3);\r\n\r\nexport const isEditingComment = state => comment =>\r\n    (state.user.userId === comment.creator._id || isAuth(state.user, 3)) &&\r\n    state.feed.editing === comment._id;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { canEditComment } from '../../redux/selectors/feed';\r\n\r\nexport class Comment extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        ownsComment: PropTypes.bool,\r\n        setEditing: PropTypes.func,\r\n        canEditComment: PropTypes.bool\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            comment: {\r\n                _id,\r\n                content,\r\n                creator: { name, flag }\r\n            },\r\n            setEditing\r\n        } = this.props;\r\n        return (\r\n            <div className=\"comment\">\r\n                <div className=\"comment__user\">\r\n                    <img className=\"comment__user--flag\" src={flag} />\r\n                    <p className=\"comment__user--author\">{name}</p>\r\n                    {canEditComment && (\r\n                        <svg\r\n                            className=\"icon icon--edit pointer\"\r\n                            onClick={() => setEditing(_id)}\r\n                            viewBox=\"0 0 32 32\"\r\n                        >\r\n                            <title>Edit Event</title>\r\n                            <path d=\"M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z\" />\r\n                        </svg>\r\n                    )}\r\n                </div>\r\n                <ReactMarkdown className=\"comment__content\" source={content} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { comment }) => ({\r\n    canEditComment: canEditComment(state)(comment)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Comment);\r\n","import { setErrors } from './common';\r\nimport { setEditing } from './feed';\r\n\r\nexport const addComment = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updateComment = (commentId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deleteComment = commentId => (dispatch, getState) =>\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: getState().user.token\r\n            }\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TextAreaAutosize from 'react-autosize-textarea';\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n} from '../../redux/actions/comments.js';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class CommentForm extends React.Component {\r\n    state = {\r\n        content: (this.props.comment && this.props.comment.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addComment(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updateComment(this.props.comment._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deleteComment(this.props.comment._id);\r\n                break;\r\n        }\r\n\r\n        if (!this.props.comment) {\r\n            this.setState({ content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors, comment, setEditing } = this.props;\r\n        const { content } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment-form\">\r\n                {!!comment && (\r\n                    <svg\r\n                        className=\"icon icon--cancel pointer\"\r\n                        onClick={() => setEditing('')}\r\n                        viewBox=\"0 0 32 32\"\r\n                    >\r\n                        <title>Cancel Editing</title>\r\n                        <path d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z\" />\r\n                        <path d=\"M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z\" />\r\n                    </svg>\r\n                )}\r\n                <div className=\"comment-form__input\">\r\n                    <TextAreaAutosize\r\n                        rows={4}\r\n                        className=\"comment-form__input--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"What do you think?\"\r\n                        name=\"content\"\r\n                    />\r\n                </div>\r\n                {errors && errors.content && (\r\n                    <p className=\"comment-form__invalid\">{errors.content}</p>\r\n                )}\r\n                {(comment && (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment,\r\n    setEditing\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    comment: PropTypes.object,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateComment: PropTypes.func.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    setEditing: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport { connect } from 'react-redux';\r\nimport { isEditingComment } from '../../redux/selectors/feed';\r\n\r\nclass Comments extends React.Component {\r\n    render() {\r\n        const { comments, isEditingComment, userId } = this.props;\r\n        return (\r\n            <div className=\"comments\">\r\n                {comments.map((comment, index) => (\r\n                    <Fragment key={index}>\r\n                        {(isEditingComment(comment) && (\r\n                            <CommentForm comment={comment} />\r\n                        )) || <Comment comment={comment} />}\r\n                    </Fragment>\r\n                ))}\r\n                {userId && (\r\n                    <div className=\"comments__new\">\r\n                        <CommentForm />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    isEditingComment: PropTypes.func,\r\n    comments: PropTypes.array,\r\n    userId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.feed.post.comments,\r\n    userId: state.user.userId,\r\n    isEditingComment: isEditingComment(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost, setEditing } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\nimport Comments from '../components/FeedPage/Comments';\r\nimport LoadingIcon from '../components/LoadingIcon';\r\nimport { isAuth } from '../redux/selectors/users';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object,\r\n        postId: PropTypes.string,\r\n        showForm: PropTypes.bool,\r\n        editable: PropTypes.bool,\r\n        getPost: PropTypes.func,\r\n        setEditing: PropTypes.func,\r\n        loading: PropTypes.bool\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.postId);\r\n    }\r\n\r\n    render() {\r\n        const { post, showForm, editable, loading } = this.props;\r\n        return (\r\n            <div className=\"individual-post\" onClick={() => setEditing('')}>\r\n                {(loading && <LoadingIcon />) || (\r\n                    <div className=\"individual-post__container\">\r\n                        {(post && (\r\n                            <Fragment>\r\n                                {(showForm && editable && (\r\n                                    <PostForm post={post} />\r\n                                )) || <Post post={post} editable={editable} />}\r\n                                <Comments />\r\n                            </Fragment>\r\n                        )) ||\r\n                            'No Post Found'}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { match }) => ({\r\n    showForm: !!state.feed.post && state.feed.editing === state.feed.post._id,\r\n    editable:\r\n        !!state.feed.post &&\r\n        (state.feed.post.creator._id === state.user.userId ||\r\n            isAuth(state.user, 3)),\r\n    postId: match.params.postId,\r\n    post: state.feed.post,\r\n    loading: state.common.loading\r\n});\r\n\r\nconst mapDispatchToProps = { getPost, setEditing };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}