{"version":3,"sources":["webpack:///./src/components/FeedPage/Comment.jsx","webpack:///./src/redux/actions/comments.js","webpack:///./src/components/FeedPage/CommentForm.jsx","webpack:///./src/components/FeedPage/Comments.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["Comment","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","Component","key","value","_this$props","props","_this$props$comment","comment","_id","content","_this$props$comment$c","creator","name","flag","setEditing","react_default","a","createElement","className","onClick","src","react_markdown_default","source","PropTypes","object","ownsComment","bool","func","mapDispatchToProps","connect","CommentForm","_React$Component","_getPrototypeOf2","_this","CommentForm_classCallCheck","_len","length","args","Array","_key","CommentForm_getPrototypeOf","call","concat","CommentForm_defineProperty","CommentForm_assertThisInitialized","e","setState","target","type","preventDefault","addComment","state","updateComment","deleteComment","CommentForm_inherits","React","errors","lib_default","rows","onChange","placeholder","onSumbit","data","dispatch","getState","_ref","body","JSON","stringify","fetch","feed","post","method","headers","Content-Type","Authorization","user","token","then","_asyncToGenerator","regeneratorRuntime","mark","_callee","res","json","wrap","_context","prev","next","sent","status","setErrors","stop","_x","catch","err","commentId","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","_x3","propTypes","isRequired","getErrors","common","Comments","comments","editing","userId","map","index","react","FeedPage_CommentForm","FeedPage_Comment","string","array","PostPage","PostPage_classCallCheck","PostPage_possibleConstructorReturn","PostPage_getPrototypeOf","PostPage_inherits","getPost","postId","showForm","editable","PostForm","Post","FeedPage_Comments","LoadingIcon","match","params","withRouter"],"mappings":"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","file":"./scripts/4.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport class Comment extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        ownsComment: PropTypes.bool,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            comment: {\r\n                _id,\r\n                content,\r\n                creator: { name, flag }\r\n            },\r\n            setEditing\r\n        } = this.props;\r\n        return (\r\n            <div className=\"comment\" onClick={() => setEditing(_id)}>\r\n                <div className=\"comment__user\">\r\n                    <img className=\"comment__user--flag\" src={flag} />\r\n                    <p className=\"comment__user--author\">{name}</p>\r\n                </div>\r\n                <ReactMarkdown className=\"comment__content\" source={content} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Comment);\r\n","import { setErrors } from './common';\r\nimport { setEditing } from './feed';\r\n\r\nexport const addComment = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updateComment = (commentId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deleteComment = commentId => (dispatch, getState) =>\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: getState().user.token\r\n            }\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport TextAreaAutosize from 'react-autosize-textarea';\r\n\r\nimport {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n} from '../../redux/actions/comments.js';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class CommentForm extends React.Component {\r\n    state = {\r\n        content: (this.props.comment && this.props.comment.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addComment(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updateComment(this.props.comment._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deleteComment(this.props.comment._id);\r\n                break;\r\n        }\r\n\r\n        if (!this.props.comment) {\r\n            this.setState({ content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors, comment } = this.props;\r\n        const { content } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment-form\">\r\n                <div className=\"comment-form__input\">\r\n                    <TextAreaAutosize\r\n                        rows={4}\r\n                        className=\"comment-form__input--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"What do you think?\"\r\n                        name=\"content\"\r\n                    />\r\n                </div>\r\n                {errors && errors.content && (\r\n                    <p className=\"comment-form__invalid\">{errors.content}</p>\r\n                )}\r\n                {(comment && (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"comment-form__buttons\">\r\n                        <button\r\n                            className=\"btn btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    comment: PropTypes.object,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateComment: PropTypes.func.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n    errors: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comments extends React.Component {\r\n    render() {\r\n        const { comments, editing, userId } = this.props;\r\n        return (\r\n            <div className=\"comments\">\r\n                {comments.map((comment, index) => (\r\n                    <Fragment key={index}>\r\n                        {(userId === comment.creator._id &&\r\n                            editing === comment._id && (\r\n                                <CommentForm comment={comment} />\r\n                            )) || <Comment comment={comment} />}\r\n                    </Fragment>\r\n                ))}\r\n                {userId && (\r\n                    <div className=\"comments__new\">\r\n                        <CommentForm />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    editing: PropTypes.string,\r\n    comments: PropTypes.array,\r\n    userId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.feed.post.comments,\r\n    editing: state.feed.editing,\r\n    userId: state.user.userId\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost, setEditing } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\nimport Comments from '../components/FeedPage/Comments';\r\nimport LoadingIcon from '../components/LoadingIcon';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object,\r\n        postId: PropTypes.string,\r\n        showForm: PropTypes.bool,\r\n        editable: PropTypes.bool,\r\n        getPost: PropTypes.func,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.postId);\r\n    }\r\n\r\n    render() {\r\n        const { post, showForm, editable } = this.props;\r\n        return (\r\n            <div className=\"individual-post\" onClick={() => setEditing('')}>\r\n                {(post && (\r\n                    <div className=\"individual-post__container\">\r\n                        {(showForm && editable && <PostForm post={post} />) || (\r\n                            <Post post={post} editable={editable} />\r\n                        )}\r\n                        <Comments />\r\n                    </div>\r\n                )) || <LoadingIcon />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { match }) => ({\r\n    showForm: !!state.feed.post && state.feed.editing === state.feed.post._id,\r\n    editable:\r\n        !!state.feed.post && state.feed.post.creator._id === state.user.userId,\r\n    postId: match.params.postId,\r\n    post: state.feed.post\r\n});\r\n\r\nconst mapDispatchToProps = { getPost, setEditing };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}