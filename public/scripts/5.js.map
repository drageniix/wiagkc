{"version":3,"sources":["webpack:///./src/redux/selectors/common.js","webpack:///./src/redux/actions/feed.js","webpack:///./src/components/FeedPage/Post.jsx","webpack:///./src/components/FeedPage/PostForm.jsx","webpack:///./src/components/FeedPage/Comment.jsx","webpack:///./src/redux/actions/comments.js","webpack:///./src/components/FeedPage/CommentForm.jsx","webpack:///./src/components/FeedPage/Comments.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["getErrors","errors","data","reduce","prev","curr","_objectSpread","_defineProperty","param","msg","setPost","post","type","setEditing","editing","setPage","page","dispatch","getPosts","getPost","postId","undefined","fetch","then","res","json","catch","err","setErrors","getState","feed","posts","totalItems","itemsPerPage","addPost","body","JSON","stringify","method","headers","Content-Type","Authorization","user","token","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","next","sent","status","stop","this","_x","apply","arguments","updatePost","_ref2","_callee2","_context2","_x2","deletePost","_ref3","_callee3","_context3","_x3","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_redux_actions_feed__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","ReactMarkdown","require","Post","editable","a","createElement","className","onClick","_id","title","creator","name","updatedAt","source","content","propTypes","PropTypes","object","func","bool","mapDispatchToProps","connect","PostForm","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","length","args","Array","_key","_getPrototypeOf","call","concat","_assertThisInitialized","props","e","setState","target","value","preventDefault","state","history","push","_inherits","React","Component","key","_this$state","onChange","placeholder","onSumbit","isRequired","common","withRouter","Comment","_Component","_possibleConstructorReturn","_this$props","_this$props$comment","comment","ownsComment","react_default","userId","CommentForm","CommentForm_classCallCheck","CommentForm_getPrototypeOf","CommentForm_defineProperty","CommentForm_assertThisInitialized","addComment","updateComment","deleteComment","CommentForm_inherits","commentId","Comments","comments","map","index","FeedPage_CommentForm","FeedPage_Comment","string","array","PostPage","PostPage_classCallCheck","PostPage_possibleConstructorReturn","PostPage_getPrototypeOf","PostPage_inherits","FeedPage_Comments","match","params"],"mappings":"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","file":"./scripts/5.js","sourcesContent":["export const getErrors = errors =>\r\n    errors &&\r\n    errors.data &&\r\n    errors.data.reduce(\r\n        (prev, curr) => ({ ...prev, [curr.param]: curr.msg }),\r\n        {}\r\n    );\r\n","import { setErrors } from './common';\r\n\r\nexport const setPost = post => ({\r\n    type: 'SET_POST',\r\n    post\r\n});\r\n\r\nexport const setEditing = editing => ({\r\n    type: 'SET_EDITING',\r\n    editing\r\n});\r\n\r\nexport const setPage = page => dispatch => {\r\n    dispatch({\r\n        type: 'SET_POSTS_PAGE',\r\n        page\r\n    });\r\n    dispatch(getPosts());\r\n};\r\n\r\nexport const getPost = postId => dispatch => {\r\n    dispatch(setPost(undefined));\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId)\r\n        .then(res => res.json())\r\n        .then(json => dispatch(setPost(json.post)))\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const getPosts = () => (dispatch, getState) => {\r\n    fetch('https://wiakc.herokuapp.com/feed/posts?page=' + getState().feed.page)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type: 'GET_POSTS',\r\n                posts: json.posts,\r\n                totalItems: json.totalItems,\r\n                itemsPerPage: json.itemsPerPage\r\n            });\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const addPost = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updatePost = (postId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deletePost = postId => (dispatch, getState) =>\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: getState().user.token\r\n        }\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ReactMarkdown = require('react-markdown');\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Post = ({ post, setEditing, editable }) => {\r\n    return (\r\n        <div\r\n            className=\"posts__post\"\r\n            onClick={editable && (() => setEditing(post._id))}\r\n        >\r\n            <h1 className=\"posts__post--title\">{post.title}</h1>\r\n            <h2 className=\"posts__post--author\">{post.creator.name}</h2>\r\n            <h6 className=\"posts__post--date\">{post.updatedAt}</h6>\r\n            <ReactMarkdown\r\n                className=\"posts__post--content\"\r\n                source={post.content}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object,\r\n    setEditing: PropTypes.func,\r\n    editable: PropTypes.bool\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Post);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addPost, updatePost, deletePost } from '../../redux/actions/feed';\r\nimport { getErrors } from '../../redux/selectors/common';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport class PostForm extends React.Component {\r\n    state = {\r\n        title: (this.props.post && this.props.post.title) || '',\r\n        content: (this.props.post && this.props.post.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addPost(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updatePost(this.props.post._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deletePost(this.props.post._id);\r\n                this.props.history.push('/feed');\r\n                break;\r\n        }\r\n\r\n        if (!this.props.post) {\r\n            this.setState({ title: '', content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content, title } = this.state;\r\n\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"post__form\">\r\n                    <input\r\n                        className=\"post__form--title\"\r\n                        value={title}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"New Post Title\"\r\n                        name=\"title\"\r\n                    />\r\n                    {errors && errors.title && (\r\n                        <p className=\"post__form--invalid\">{errors.title}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"post__form\">\r\n                    <textarea\r\n                        className=\"post__form--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Share a recipe, experience, or anything else!\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"post__form--invalid\">{errors.content}</p>\r\n                    )}\r\n                </div>\r\n                {(this.props.post && (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Post\r\n                        </button>\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Post\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Post\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n    updatePost,\r\n    deletePost\r\n};\r\n\r\nPostForm.propTypes = {\r\n    post: PropTypes.object,\r\n    addPost: PropTypes.func.isRequired,\r\n    updatePost: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostForm));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEditing } from '../../redux/actions/feed';\r\n\r\nexport class Comment extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        ownsComment: PropTypes.bool,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            comment: {\r\n                _id,\r\n                content,\r\n                creator: { name }\r\n            },\r\n            ownsComment,\r\n            setEditing\r\n        } = this.props;\r\n        return (\r\n            <div onClick={() => setEditing(_id)}>\r\n                <p>\r\n                    {content} by {name}\r\n                </p>\r\n                <p>Owner: {ownsComment}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { comment }) => ({\r\n    ownsComment: comment.creator._id === state.user.userId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Comment);\r\n","import { setErrors } from './common';\r\nimport { setEditing } from './feed';\r\n\r\nexport const addComment = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updateComment = (commentId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deleteComment = commentId => (dispatch, getState) =>\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: getState().user.token\r\n            }\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n} from '../../redux/actions/comments.js';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class CommentForm extends React.Component {\r\n    state = {\r\n        content: (this.props.comment && this.props.comment.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addComment(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updateComment(this.props.comment._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deleteComment(this.props.comment._id);\r\n                break;\r\n        }\r\n\r\n        if (!this.props.comment) {\r\n            this.setState({ content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment\">\r\n                <div className=\"comment__form\">\r\n                    <textarea\r\n                        className=\"comment__form--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"What do you think?\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"comment__form--invalid\">\r\n                            {errors.content}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n                {(this.props.comment && (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Comment\r\n                        </button>\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Comment\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    comment: PropTypes.object,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateComment: PropTypes.func.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n    errors: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comments extends React.Component {\r\n    render() {\r\n        const { comments, editing } = this.props;\r\n        return (\r\n            <div className=\"comments\">\r\n                {comments.map((comment, index) => (\r\n                    <div key={index} className=\"comments__comment\">\r\n                        {(editing === comment._id && (\r\n                            <CommentForm comment={comment} />\r\n                        )) || <Comment comment={comment} />}\r\n                    </div>\r\n                ))}\r\n                <div className=\"comments__new\">\r\n                    <CommentForm />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    editing: PropTypes.string,\r\n    comments: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.feed.post.comments,\r\n    editing: state.feed.editing\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost, setEditing } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\nimport Comments from '../components/FeedPage/Comments';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        editing: PropTypes.string,\r\n        post: PropTypes.object,\r\n        postId: PropTypes.string,\r\n        getPost: PropTypes.func,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.postId);\r\n    }\r\n\r\n    render() {\r\n        const { post, editing } = this.props;\r\n        return (\r\n            <div className=\"individual-post\" onClick={() => setEditing('')}>\r\n                {(post && (\r\n                    <div>\r\n                        {(editing === post._id && <PostForm post={post} />) || (\r\n                            <Post post={post} editable />\r\n                        )}\r\n                        <Comments />\r\n                    </div>\r\n                )) ||\r\n                    'No post found.'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { match }) => ({\r\n    editing: state.feed.editing,\r\n    postId: match.params.postId,\r\n    post: state.feed.post\r\n});\r\n\r\nconst mapDispatchToProps = { getPost, setEditing };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}