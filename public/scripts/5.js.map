{"version":3,"sources":["webpack:///./src/redux/selectors/common.js","webpack:///./src/redux/actions/feed.js","webpack:///./src/components/FeedPage/Post.jsx","webpack:///./src/components/FeedPage/PostForm.jsx","webpack:///./src/components/FeedPage/Comment.jsx","webpack:///./src/redux/actions/comments.js","webpack:///./src/components/FeedPage/CommentForm.jsx","webpack:///./src/components/FeedPage/Comments.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["getErrors","errors","data","reduce","prev","curr","_objectSpread","_defineProperty","param","msg","setPost","post","type","setEditing","editing","setPage","page","dispatch","getPosts","getPost","postId","undefined","fetch","then","res","json","catch","err","setErrors","getState","feed","posts","totalItems","itemsPerPage","addPost","body","JSON","stringify","method","headers","Content-Type","Authorization","user","token","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","next","sent","status","stop","this","_x","apply","arguments","updatePost","_ref2","_callee2","_context2","_x2","deletePost","_ref3","_callee3","_context3","_x3","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_redux_actions_feed__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","ReactMarkdown","require","Post","editable","userId","history","a","createElement","className","onClick","creator","_id","push","title","name","updatedAt","source","content","propTypes","PropTypes","object","func","bool","string","mapDispatchToProps","connect","state","withRouter","PostForm","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","length","args","Array","_key","_getPrototypeOf","call","concat","_assertThisInitialized","props","e","setState","target","value","preventDefault","_inherits","React","Component","key","_this$state","onChange","placeholder","onSumbit","isRequired","common","Comment","_Component","_possibleConstructorReturn","_this$props","_this$props$comment","comment","_this$props$comment$c","flag","react_default","src","ownsComment","CommentForm","CommentForm_classCallCheck","CommentForm_getPrototypeOf","CommentForm_defineProperty","CommentForm_assertThisInitialized","addComment","updateComment","deleteComment","CommentForm_inherits","commentId","Comments","comments","map","index","FeedPage_CommentForm","FeedPage_Comment","array","PostPage","PostPage_classCallCheck","PostPage_possibleConstructorReturn","PostPage_getPrototypeOf","PostPage_inherits","FeedPage_Comments","match","params"],"mappings":"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","file":"./scripts/5.js","sourcesContent":["export const getErrors = errors =>\r\n    errors &&\r\n    errors.data &&\r\n    errors.data.reduce(\r\n        (prev, curr) => ({ ...prev, [curr.param]: curr.msg }),\r\n        {}\r\n    );\r\n","import { setErrors } from './common';\r\n\r\nexport const setPost = post => ({\r\n    type: 'SET_POST',\r\n    post\r\n});\r\n\r\nexport const setEditing = editing => ({\r\n    type: 'SET_EDITING',\r\n    editing\r\n});\r\n\r\nexport const setPage = page => dispatch => {\r\n    dispatch({\r\n        type: 'SET_POSTS_PAGE',\r\n        page\r\n    });\r\n    dispatch(getPosts());\r\n};\r\n\r\nexport const getPost = postId => dispatch => {\r\n    dispatch(setPost(undefined));\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId)\r\n        .then(res => res.json())\r\n        .then(json => dispatch(setPost(json.post)))\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const getPosts = () => (dispatch, getState) => {\r\n    fetch('https://wiakc.herokuapp.com/feed/posts?page=' + getState().feed.page)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type: 'GET_POSTS',\r\n                posts: json.posts,\r\n                totalItems: json.totalItems,\r\n                itemsPerPage: json.itemsPerPage\r\n            });\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const addPost = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updatePost = (postId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deletePost = postId => (dispatch, getState) =>\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: getState().user.token\r\n        }\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ReactMarkdown = require('react-markdown');\r\nimport { setEditing } from '../../redux/actions/feed';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Post = ({ post, setEditing, editable, userId, history }) => {\r\n    return (\r\n        <div\r\n            className=\"posts__post\"\r\n            onClick={() =>\r\n                (userId === post.creator._id &&\r\n                    editable &&\r\n                    setEditing(post._id)) ||\r\n                history.push('/feed/' + post._id)\r\n            }\r\n        >\r\n            <h1 className=\"posts__post--title\">{post.title}</h1>\r\n            <h2 className=\"posts__post--author\">{post.creator.name}</h2>\r\n            <h6 className=\"posts__post--date\">{post.updatedAt}</h6>\r\n            <ReactMarkdown\r\n                className=\"posts__post--content\"\r\n                source={post.content}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object,\r\n    setEditing: PropTypes.func,\r\n    editable: PropTypes.bool,\r\n    history: PropTypes.object,\r\n    userId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userId: state.user.userId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(Post));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addPost, updatePost, deletePost } from '../../redux/actions/feed';\r\nimport { getErrors } from '../../redux/selectors/common';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport class PostForm extends React.Component {\r\n    state = {\r\n        title: (this.props.post && this.props.post.title) || '',\r\n        content: (this.props.post && this.props.post.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addPost(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updatePost(this.props.post._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deletePost(this.props.post._id);\r\n                this.props.history.push('/feed');\r\n                break;\r\n        }\r\n\r\n        if (!this.props.post) {\r\n            this.setState({ title: '', content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content, title } = this.state;\r\n\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"post__form\">\r\n                    <input\r\n                        className=\"post__form--title\"\r\n                        value={title}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"New Post Title\"\r\n                        name=\"title\"\r\n                    />\r\n                    {errors && errors.title && (\r\n                        <p className=\"post__form--invalid\">{errors.title}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"post__form\">\r\n                    <textarea\r\n                        className=\"post__form--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Share a recipe, experience, or anything else!\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"post__form--invalid\">{errors.content}</p>\r\n                    )}\r\n                </div>\r\n                {(this.props.post && (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Post\r\n                        </button>\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Post\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Post\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n    updatePost,\r\n    deletePost\r\n};\r\n\r\nPostForm.propTypes = {\r\n    post: PropTypes.object,\r\n    addPost: PropTypes.func.isRequired,\r\n    updatePost: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostForm));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { setEditing } from '../../redux/actions/feed';\r\n\r\nexport class Comment extends Component {\r\n    static propTypes = {\r\n        comment: PropTypes.object,\r\n        ownsComment: PropTypes.bool,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            comment: {\r\n                _id,\r\n                content,\r\n                creator: { name, flag }\r\n            },\r\n            setEditing\r\n        } = this.props;\r\n        return (\r\n            <div onClick={() => setEditing(_id)}>\r\n                <img className=\"summary__flag\" src={flag} />\r\n                <p>\r\n                    {content} by {name}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setEditing\r\n};\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(Comment);\r\n","import { setErrors } from './common';\r\nimport { setEditing } from './feed';\r\n\r\nexport const addComment = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments',\r\n        {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updateComment = (commentId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: getState().user.token\r\n            },\r\n            body\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            } else {\r\n                dispatch(setEditing(''));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deleteComment = commentId => (dispatch, getState) =>\r\n    fetch(\r\n        'https://wiakc.herokuapp.com/feed/post/' +\r\n            getState().feed.post._id +\r\n            '/comments/' +\r\n            commentId,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: getState().user.token\r\n            }\r\n        }\r\n    )\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n} from '../../redux/actions/comments.js';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class CommentForm extends React.Component {\r\n    state = {\r\n        content: (this.props.comment && this.props.comment.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addComment(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updateComment(this.props.comment._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deleteComment(this.props.comment._id);\r\n                break;\r\n        }\r\n\r\n        if (!this.props.comment) {\r\n            this.setState({ content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content } = this.state;\r\n\r\n        return (\r\n            <div className=\"comment\">\r\n                <div className=\"comment__form\">\r\n                    <textarea\r\n                        className=\"comment__form--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"What do you think?\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"comment__form--invalid\">\r\n                            {errors.content}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n                {(this.props.comment && (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Comment\r\n                        </button>\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Comment\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"comment__form--btn comment__form--btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Comment\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addComment,\r\n    updateComment,\r\n    deleteComment\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    comment: PropTypes.object,\r\n    addComment: PropTypes.func.isRequired,\r\n    updateComment: PropTypes.func.isRequired,\r\n    deleteComment: PropTypes.func.isRequired,\r\n    errors: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Comment from './Comment';\r\nimport CommentForm from './CommentForm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Comments extends React.Component {\r\n    render() {\r\n        const { comments, editing, userId } = this.props;\r\n        return (\r\n            <div className=\"comments\">\r\n                {comments.map((comment, index) => (\r\n                    <div key={index} className=\"comments__comment\">\r\n                        {(userId === comment.creator._id &&\r\n                            editing === comment._id && (\r\n                                <CommentForm comment={comment} />\r\n                            )) || <Comment comment={comment} />}\r\n                    </div>\r\n                ))}\r\n                <div className=\"comments__new\">\r\n                    <CommentForm />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    editing: PropTypes.string,\r\n    comments: PropTypes.array,\r\n    userId: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.feed.post.comments,\r\n    editing: state.feed.editing,\r\n    userId: state.user.userId\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost, setEditing } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\nimport Comments from '../components/FeedPage/Comments';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        editing: PropTypes.string,\r\n        post: PropTypes.object,\r\n        postId: PropTypes.string,\r\n        getPost: PropTypes.func,\r\n        setEditing: PropTypes.func\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.postId);\r\n    }\r\n\r\n    render() {\r\n        const { post, editing } = this.props;\r\n        return (\r\n            <div className=\"individual-post\" onClick={() => setEditing('')}>\r\n                {(post && (\r\n                    <div>\r\n                        {(editing === post._id && <PostForm post={post} />) || (\r\n                            <Post post={post} editable />\r\n                        )}\r\n                        <Comments />\r\n                    </div>\r\n                )) ||\r\n                    'No post found.'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, { match }) => ({\r\n    editing: state.feed.editing,\r\n    postId: match.params.postId,\r\n    post: state.feed.post\r\n});\r\n\r\nconst mapDispatchToProps = { getPost, setEditing };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}