{"version":3,"sources":["webpack:///./src/redux/selectors/common.js","webpack:///./src/redux/actions/feed.js","webpack:///./src/components/FeedPage/Post.jsx","webpack:///./src/components/FeedPage/PostForm.jsx","webpack:///./src/pages/PostPage.jsx"],"names":["getErrors","errors","data","reduce","prev","curr","_objectSpread","_defineProperty","param","msg","setPost","post","type","setPage","page","dispatch","getPosts","getPost","postId","undefined","fetch","then","res","json","catch","err","setErrors","getState","feed","posts","totalItems","itemsPerPage","addPost","body","JSON","stringify","method","headers","Content-Type","Authorization","user","token","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","next","sent","status","stop","this","_x","apply","arguments","updatePost","_ref2","_callee2","_context2","_x2","deletePost","_ref3","_callee3","_context3","_x3","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","ReactMarkdown","require","Post","onClick","a","createElement","className","title","creator","name","updatedAt","source","content","propTypes","PropTypes","object","func","PostForm","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","length","args","Array","_key","_getPrototypeOf","call","concat","_assertThisInitialized","props","e","setState","target","value","preventDefault","state","_id","history","push","_inherits","React","Component","key","_this$state","onChange","placeholder","onSumbit","mapDispatchToProps","isRequired","connect","common","withRouter","PostPage","_Component","match","params","_components_FeedPage_PostForm__WEBPACK_IMPORTED_MODULE_2__","_components_FeedPage_Post__WEBPACK_IMPORTED_MODULE_6__","id"],"mappings":"kPAAO,IAAMA,EAAY,SAAAC,GAAM,OAC3BA,GACAA,EAAOC,MACPD,EAAOC,KAAKC,OACR,SAACC,EAAMC,GAAP,yUAAAC,CAAA,GAAsBF,EAAtBG,EAAA,GAA6BF,EAAKG,MAAQH,EAAKI,OAC/C,6gBCHD,IAAMC,EAAU,SAAAC,GAAI,MAAK,CAC5BC,KAAM,WACND,SAGSE,EAAU,SAAAC,GAAI,OAAI,SAAAC,GAC3BA,EAAS,CACLH,KAAM,iBACNE,SAEJC,EAASC,OAGAC,EAAU,SAAAC,GAAM,OAAI,SAAAH,GAC7BA,EAASL,OAAQS,IACjBC,MAAM,yCAA2CF,GAC5CG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GAAI,OAAIR,EAASL,EAAQa,EAAKZ,SACnCa,MAAM,SAAAC,GAAG,OAAIV,EAASW,YAAUD,QAG5BT,EAAW,kBAAM,SAACD,EAAUY,GACrCP,MAAM,+CAAiDO,IAAWC,KAAKd,MAClEO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAE,GACFR,EAAS,CACLH,KAAM,YACNiB,MAAON,EAAKM,MACZC,WAAYP,EAAKO,WACjBC,aAAcR,EAAKQ,iBAG1BP,MAAM,SAAAC,GAAG,OAAIV,EAASW,YAAUD,QAG5BO,EAAU,SAAA9B,GAAI,OAAI,SAACa,EAAUY,GACtC,IAAMM,EAAOC,KAAKC,UAAUjC,GAC5BkB,MAAM,wCAAyC,CAC3CgB,OAAQ,OACRC,QAAS,CACLC,eAAgB,mBAChBC,cAAeZ,IAAWa,KAAKC,OAEnCR,SAECZ,KARL,eAAAqB,EAAAC,EAAAC,mBAAAC,KAQU,SAAAC,EAAMxB,GAAN,IAAAC,EAAA,OAAAqB,mBAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAA5C,KAAA4C,EAAAC,MAAA,cAAAD,EAAAC,KAAA,EACiB3B,EAAIC,OADrB,OACIA,EADJyB,EAAAE,KAEiB,MAAf5B,EAAI6B,QACJpC,EAASW,YAAUH,IAHrB,wBAAAyB,EAAAI,SAAAN,EAAAO,SARV,gBAAAC,GAAA,OAAAZ,EAAAa,MAAAF,KAAAG,YAAA,IAcKhC,MAAM,SAAAC,GAAG,OAAIV,EAASW,YAAUD,QAG5BgC,EAAa,SAACvC,EAAQhB,GAAT,OAAkB,SAACa,EAAUY,GACnD,IAAMM,EAAOC,KAAKC,UAAUjC,GAC5BkB,MAAM,yCAA2CF,EAAQ,CACrDkB,OAAQ,MACRC,QAAS,CACLC,eAAgB,mBAChBC,cAAeZ,IAAWa,KAAKC,OAEnCR,SAECZ,KARL,eAAAqC,EAAAf,EAAAC,mBAAAC,KAQU,SAAAc,EAAMrC,GAAN,IAAAC,EAAA,OAAAqB,mBAAAG,KAAA,SAAAa,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACiB3B,EAAIC,OADrB,OACIA,EADJqC,EAAAV,KAEiB,MAAf5B,EAAI6B,QACJpC,EAASW,YAAUH,IAHrB,wBAAAqC,EAAAR,SAAAO,EAAAN,SARV,gBAAAQ,GAAA,OAAAH,EAAAH,MAAAF,KAAAG,YAAA,IAcKhC,MAAM,SAAAC,GAAG,OAAIV,EAASW,YAAUD,QAG5BqC,EAAa,SAAA5C,GAAM,OAAI,SAACH,EAAUY,GAAX,OAChCP,MAAM,yCAA2CF,EAAQ,CACrDkB,OAAQ,SACRC,QAAS,CACLE,cAAeZ,IAAWa,KAAKC,SAGlCpB,KANL,eAAA0C,EAAApB,EAAAC,mBAAAC,KAMU,SAAAmB,EAAM1C,GAAN,IAAAC,EAAA,OAAAqB,mBAAAG,KAAA,SAAAkB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACiB3B,EAAIC,OADrB,OACIA,EADJ0C,EAAAf,KAEiB,MAAf5B,EAAI6B,QACJpC,EAASW,YAAUH,IAHrB,wBAAA0C,EAAAb,SAAAY,EAAAX,SANV,gBAAAa,GAAA,OAAAH,EAAAR,MAAAF,KAAAG,YAAA,IAYKhC,MAAM,SAAAC,GAAG,OAAIV,EAASW,YAAUD,0CCxFzC,IAAA0C,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAEME,EAAgBC,EAAQ,KAExBC,EAAO,SAAAjC,GAAuB,IAApB/B,EAAoB+B,EAApB/B,KAAMiE,EAAclC,EAAdkC,QAClB,OACIP,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,cAAcH,QAASA,GAClCP,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,sBAAsBpE,EAAKqE,OACzCX,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,uBAAuBpE,EAAKsE,QAAQC,MAClDb,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,qBAAqBpE,EAAKwE,WACxCd,EAAAQ,EAAAC,cAACL,EAAD,CACIM,UAAU,uBACVK,OAAQzE,EAAK0E,YAM7BV,EAAKW,UAAY,CACb3E,KAAM4E,IAAUC,OAChBZ,QAASW,IAAUE,MAGRd,08BCjBR,IAAMe,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,mGAAAC,CAAAzC,KAAAqC,GAAA,QAAAK,EAAAvC,UAAAwC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA3C,UAAA2C,GAAA,SAAA9C,QAAAuC,EAAAQ,EAAAV,IAAAW,KAAA9C,MAAAqC,EAAA,CAAAvC,MAAAiD,OAAAL,IAAA1F,EAAAgG,IAAAV,qDAAA,QACY,CACJb,MAAQa,EAAKW,MAAM7F,MAAQkF,EAAKW,MAAM7F,KAAKqE,OAAU,GACrDK,QAAUQ,EAAKW,MAAM7F,MAAQkF,EAAKW,MAAM7F,KAAK0E,SAAY,KAHjE9E,EAAAgG,IAAAV,IAAA,WAMe,SAAAY,GAAC,OAAIZ,EAAKa,SAALnG,EAAA,GAAiBkG,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOC,UAN9DrG,EAAAgG,IAAAV,IAAA,WAQe,SAAAjF,GAAI,OAAI,SAAA6F,GAGf,OAFAA,EAAEI,iBAEMjG,GACJ,KAAK,EACDiF,EAAKW,MAAMxE,QAAQ6D,EAAKiB,OACxB,MACJ,KAAK,EACDjB,EAAKW,MAAM/C,WAAWoC,EAAKW,MAAM7F,KAAKoG,IAAKlB,EAAKiB,OAChD,MACJ,KAAK,EACDjB,EAAKW,MAAM1C,WAAW+B,EAAKW,MAAM7F,KAAKoG,KACtClB,EAAKW,MAAMQ,QAAQC,KAAK,SAI3BpB,EAAKW,MAAM7F,MACZkF,EAAKa,SAAS,CAAE1B,MAAO,GAAIK,QAAS,QAzBhDQ,YAAA,yOAAAqB,CAAAxB,EAA8ByB,IAAMC,aAApC1B,KAAA,EAAA2B,IAAA,SAAAT,MAAA,WA6Ba,IACG3G,EAAWoD,KAAKmD,MAAhBvG,OADHqH,EAEsBjE,KAAKyD,MAAxBzB,EAFHiC,EAEGjC,QAASL,EAFZsC,EAEYtC,MAEjB,OACIX,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,QACXV,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,cACXV,EAAAQ,EAAAC,cAAA,SACIC,UAAU,oBACV6B,MAAO5B,EACPuC,SAAUlE,KAAKkE,SACf3G,KAAK,OACL4G,YAAY,iBACZtC,KAAK,UAERjF,GAAUA,EAAO+E,OACdX,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,uBAAuB9E,EAAO+E,QAGnDX,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,cACXV,EAAAQ,EAAAC,cAAA,YACIC,UAAU,sBACV6B,MAAOvB,EACPkC,SAAUlE,KAAKkE,SACfC,YAAY,gDACZtC,KAAK,YAERjF,GAAUA,EAAOoF,SACdhB,EAAAQ,EAAAC,cAAA,KAAGC,UAAU,uBAAuB9E,EAAOoF,UAGjDhC,KAAKmD,MAAM7F,MACT0D,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,WACXV,EAAAQ,EAAAC,cAAA,UACIC,UAAU,0CACVH,QAASvB,KAAKoE,SAAS,IAF3B,eAMApD,EAAAQ,EAAAC,cAAA,UACIC,UAAU,0CACVH,QAASvB,KAAKoE,SAAS,IAF3B,iBAQJpD,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,WACXV,EAAAQ,EAAAC,cAAA,UACIC,UAAU,uCACVH,QAASvB,KAAKoE,SAAS,IAF3B,8CA7ExB/B,EAAA,GA8FMgC,EAAqB,CACvB1F,QAAS,SAAA9B,GAAI,OAAI8B,YAAQ9B,IACzBuD,WAAY,SAACvC,EAAQhB,GAAT,OAAkBuD,YAAWvC,EAAQhB,IACjD4D,WAAY,SAAA5C,GAAM,OAAI4C,YAAW5C,KAGrCwE,EAASJ,UAAY,CACjB3E,KAAM4E,IAAUC,OAChBxD,QAASuD,IAAUE,KAAKkC,WACxBlE,WAAY8B,IAAUE,KAAKkC,WAC3B7D,WAAYyB,IAAUE,KAAKkC,WAC3B1H,OAAQsF,IAAUC,OAClBwB,QAASzB,IAAUC,QAGRoC,gBAnBS,SAAAd,GAAK,MAAK,CAC9B7G,OAAQD,YAAU8G,EAAMe,OAAO5H,UAoB/ByH,EAFWE,CAGbE,YAAWpC,+/BC9GN,IAAMqC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAnC,EAAAC,mGAAAC,CAAAzC,KAAA0E,GAAA,QAAAhC,EAAAvC,UAAAwC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAA3C,UAAA2C,GAAA,SAAA9C,KAAA9C,EAAAgG,IAAAV,OAAAD,EAAAQ,EAAA2B,IAAA1B,KAAA9C,MAAAqC,EAAA,CAAAvC,MAAAiD,OAAAL,qDAAA,QAOY,CACJ/E,OAAQ2E,EAAKW,MAAMyB,MAAMC,OAAOhH,SARxC2E,YAAA,yOAAAqB,CAAAa,EAA8BX,kBAA9BW,KAAA,EAAAV,IAAA,oBAAAT,MAAA,WAYQvD,KAAKmD,MAAMvF,QAAQoC,KAAKyD,MAAM5F,UAZtC,CAAAmG,IAAA,SAAAT,MAAA,WAgBQ,OACIvC,EAAAQ,EAAAC,cAAA,WACMzB,KAAKmD,MAAM7F,MACT0D,EAAAQ,EAAAC,cAAA,WACIT,EAAAQ,EAAAC,cAACqD,EAAA,EAAD,CAAUxH,KAAM0C,KAAKmD,MAAM7F,OAC3B0D,EAAAQ,EAAAC,cAACsD,EAAA,EAAD,CAAMzH,KAAM0C,KAAKmD,MAAM7F,SAG3B,kDAxBpBoH,EAAA,KAAaA,cACU,CACfpH,KAAM4E,IAAUC,OAChByC,MAAO1C,IAAUC,OACjBvE,QAASsE,IAAUE,OA0B3B,IAIMiC,EAAqB,CAAEzG,QAAS,SAAAoH,GAAE,OAAIpH,YAAQoH,KAErCT,sBANS,SAAAd,GAAK,MAAK,CAC9BnG,KAAMmG,EAAMlF,KAAKjB,OAOjB+G,EAFWE,CAGbE,YAAWC","file":"./scripts/5.js","sourcesContent":["export const getErrors = errors =>\r\n    errors &&\r\n    errors.data &&\r\n    errors.data.reduce(\r\n        (prev, curr) => ({ ...prev, [curr.param]: curr.msg }),\r\n        {}\r\n    );\r\n","import { setErrors } from './common';\r\n\r\nexport const setPost = post => ({\r\n    type: 'SET_POST',\r\n    post\r\n});\r\n\r\nexport const setPage = page => dispatch => {\r\n    dispatch({\r\n        type: 'SET_POSTS_PAGE',\r\n        page\r\n    });\r\n    dispatch(getPosts());\r\n};\r\n\r\nexport const getPost = postId => dispatch => {\r\n    dispatch(setPost(undefined));\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId)\r\n        .then(res => res.json())\r\n        .then(json => dispatch(setPost(json.post)))\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const getPosts = () => (dispatch, getState) => {\r\n    fetch('https://wiakc.herokuapp.com/feed/posts?page=' + getState().feed.page)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n            dispatch({\r\n                type: 'GET_POSTS',\r\n                posts: json.posts,\r\n                totalItems: json.totalItems,\r\n                itemsPerPage: json.itemsPerPage\r\n            });\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const addPost = data => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 201) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const updatePost = (postId, data) => (dispatch, getState) => {\r\n    const body = JSON.stringify(data);\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: getState().user.token\r\n        },\r\n        body\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n};\r\n\r\nexport const deletePost = postId => (dispatch, getState) =>\r\n    fetch('https://wiakc.herokuapp.com/feed/post/' + postId, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Authorization: getState().user.token\r\n        }\r\n    })\r\n        .then(async res => {\r\n            const json = await res.json();\r\n            if (res.status !== 200) {\r\n                dispatch(setErrors(json));\r\n            }\r\n        })\r\n        .catch(err => dispatch(setErrors(err)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst ReactMarkdown = require('react-markdown');\r\n\r\nconst Post = ({ post, onClick }) => {\r\n    return (\r\n        <div className=\"posts__post\" onClick={onClick}>\r\n            <h1 className=\"posts__post--title\">{post.title}</h1>\r\n            <h2 className=\"posts__post--author\">{post.creator.name}</h2>\r\n            <h6 className=\"posts__post--date\">{post.updatedAt}</h6>\r\n            <ReactMarkdown\r\n                className=\"posts__post--content\"\r\n                source={post.content}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    post: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addPost, updatePost, deletePost } from '../../redux/actions/feed';\r\nimport { getErrors } from '../../redux/selectors/common';\r\nimport { withRouter } from 'react-router-dom';\r\nexport class PostForm extends React.Component {\r\n    state = {\r\n        title: (this.props.post && this.props.post.title) || '',\r\n        content: (this.props.post && this.props.post.content) || ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = type => e => {\r\n        e.preventDefault();\r\n\r\n        switch (type) {\r\n            case 0:\r\n                this.props.addPost(this.state);\r\n                break;\r\n            case 1:\r\n                this.props.updatePost(this.props.post._id, this.state);\r\n                break;\r\n            case 2:\r\n                this.props.deletePost(this.props.post._id);\r\n                this.props.history.push('/feed');\r\n                break;\r\n        }\r\n\r\n        if (!this.props.post) {\r\n            this.setState({ title: '', content: '' });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { content, title } = this.state;\r\n\r\n        return (\r\n            <div className=\"post\">\r\n                <div className=\"post__form\">\r\n                    <input\r\n                        className=\"post__form--title\"\r\n                        value={title}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"New Post Title\"\r\n                        name=\"title\"\r\n                    />\r\n                    {errors && errors.title && (\r\n                        <p className=\"post__form--invalid\">{errors.title}</p>\r\n                    )}\r\n                </div>\r\n                <div className=\"post__form\">\r\n                    <textarea\r\n                        className=\"post__form--content\"\r\n                        value={content}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Share a recipe, experience, or anything else!\"\r\n                        name=\"content\"\r\n                    />\r\n                    {errors && errors.content && (\r\n                        <p className=\"post__form--invalid\">{errors.content}</p>\r\n                    )}\r\n                </div>\r\n                {(this.props.post && (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--update\"\r\n                            onClick={this.onSumbit(1)}\r\n                        >\r\n                            Update Post\r\n                        </button>\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--delete\"\r\n                            onClick={this.onSumbit(2)}\r\n                        >\r\n                            Delete Post\r\n                        </button>\r\n                    </div>\r\n                )) || (\r\n                    <div className=\"buttons\">\r\n                        <button\r\n                            className=\"post__form--btn post__form--btn--add\"\r\n                            onClick={this.onSumbit(0)}\r\n                        >\r\n                            Add Post\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addPost: data => addPost(data),\r\n    updatePost: (postId, data) => updatePost(postId, data),\r\n    deletePost: postId => deletePost(postId)\r\n};\r\n\r\nPostForm.propTypes = {\r\n    post: PropTypes.object,\r\n    addPost: PropTypes.func.isRequired,\r\n    updatePost: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    errors: PropTypes.object,\r\n    history: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostForm));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostForm from '../components/FeedPage/PostForm';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getPost } from '../redux/actions/feed';\r\nimport Post from '../components/FeedPage/Post';\r\n\r\nexport class PostPage extends Component {\r\n    static propTypes = {\r\n        post: PropTypes.object,\r\n        match: PropTypes.object,\r\n        getPost: PropTypes.func\r\n    };\r\n\r\n    state = {\r\n        postId: this.props.match.params.postId\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.state.postId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.props.post && (\r\n                    <div>\r\n                        <PostForm post={this.props.post} />\r\n                        <Post post={this.props.post} />\r\n                    </div>\r\n                )) ||\r\n                    'No post found.'}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.feed.post\r\n});\r\n\r\nconst mapDispatchToProps = { getPost: id => getPost(id) };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(PostPage));\r\n"],"sourceRoot":""}