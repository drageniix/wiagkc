{"version":3,"sources":["webpack:///./src/redux/selectors/common.js","webpack:///./src/components/Modals/Signup.jsx"],"names":["getErrors","errors","data","reduce","prev","curr","_objectSpread","_defineProperty","param","msg","SignUp","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","email","name","password","confirm_password","country","e","setState","target","value","preventDefault","stopPropagation","props","signup","state","_inherits","React","Component","key","_this$state","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","htmlFor","onChange","type","placeholder","onClick","onSumbit","mapDispatchToProps","propTypes","PropTypes","func","isRequired","object","connect","common"],"mappings":"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","file":"./scripts/12.js","sourcesContent":["export const getErrors = errors =>\r\n    errors &&\r\n    errors.data &&\r\n    errors.data.reduce(\r\n        (prev, curr) => ({ ...prev, [curr.param]: curr.msg }),\r\n        {}\r\n    );\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { signup } from '../../redux/actions/user';\r\nimport { getErrors } from '../../redux/selectors/common';\r\n\r\nexport class SignUp extends React.Component {\r\n    state = {\r\n        email: '',\r\n        name: '',\r\n        password: '',\r\n        confirm_password: '',\r\n        country: ''\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSumbit = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.signup(this.state);\r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.props;\r\n        const { name, country, email, password, confirm_password } = this.state;\r\n\r\n        return (\r\n            <div className=\"user\">\r\n                <p>Welcome!</p>\r\n                <div className=\"user__input\">\r\n                    <label htmlFor=\"name\" className=\"user__input--title\">\r\n                        Name:\r\n                    </label>\r\n                    <input\r\n                        className=\"user__input--data\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"name\"\r\n                        name=\"name\"\r\n                    />\r\n                </div>\r\n                {errors && errors.name && (\r\n                    <p className=\"user__input--invalid\">{errors.name}</p>\r\n                )}\r\n                <div className=\"user__input\">\r\n                    <label htmlFor=\"country\" className=\"user__input--title\">\r\n                        Country:\r\n                    </label>\r\n                    <input\r\n                        className=\"user__input--data\"\r\n                        value={country}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"country\"\r\n                        name=\"country\"\r\n                    />\r\n                </div>\r\n                {errors && errors.country && (\r\n                    <p className=\"user__input--invalid\">{errors.country}</p>\r\n                )}\r\n                <div className=\"user__input\">\r\n                    <label htmlFor=\"email\" className=\"user__input--title\">\r\n                        Email:\r\n                    </label>\r\n                    <input\r\n                        className=\"user__input--data\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        type=\"email\"\r\n                        placeholder=\"email\"\r\n                        name=\"email\"\r\n                    />\r\n                </div>\r\n                {errors && errors.email && (\r\n                    <p className=\"user__input--invalid\">{errors.email}</p>\r\n                )}\r\n                <div className=\"user__input\">\r\n                    <label htmlFor=\"password\" className=\"user__input--title\">\r\n                        Password:\r\n                    </label>\r\n                    <input\r\n                        className=\"user__input--data\"\r\n                        value={password}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        name=\"password\"\r\n                    />\r\n                </div>\r\n                {errors && errors.password && (\r\n                    <p className=\"user__input--invalid\">{errors.password}</p>\r\n                )}\r\n                <div className=\"user__input\">\r\n                    <label\r\n                        htmlFor=\"confirm_password\"\r\n                        className=\"user__input--title\"\r\n                    >\r\n                        Confirm Password:\r\n                    </label>\r\n                    <input\r\n                        className=\"user__input--data\"\r\n                        value={confirm_password}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"confirm password\"\r\n                        name=\"confirm_password\"\r\n                    />\r\n                </div>\r\n                {errors && errors.confirm_password && (\r\n                    <p className=\"user__input--invalid\">\r\n                        {errors.confirm_password}\r\n                    </p>\r\n                )}\r\n                <button className=\"btn btn--signup\" onClick={this.onSumbit}>\r\n                    Signup\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: getErrors(state.common.errors)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    signup: data => signup(data)\r\n};\r\n\r\nSignUp.propTypes = {\r\n    signup: PropTypes.func.isRequired,\r\n    errors: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignUp);\r\n"],"sourceRoot":""}